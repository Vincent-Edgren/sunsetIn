{"ast":null,"code":"const parseNum = require('parse-num');\n\n/* global Intl */\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\nconst defaultOptions = {\n  nanZero: true,\n  locale: 'en-US',\n  localeMatcher: 'best fit',\n  useGrouping: true,\n  // grouping separator determined by locale\n  maximumFractionDigits: 15\n  // OTHER\n  // minimumIntegerDigits\n  // minimumFractionDigits\n  // maximumFractionDigits\n  // minimumSignificantDigits\n  // maximumSignificantDigits\n};\n\nfunction formatNum(number, opts) {\n  opts = renameKeyShortcuts(Object.assign({}, defaultOptions, opts));\n  number = parseNum(number);\n  if (isNaN(number)) {\n    if (opts.nanZero === false) return 'NaN';else number = 0;\n  }\n  const nf = new Intl.NumberFormat([opts.locale], Object.assign({}, opts, {\n    style: 'decimal'\n  }));\n  return nf.format(number);\n}\nfunction renameKeyShortcuts(opts) {\n  // expand 'min' to 'minimum', 'max' to 'maximum'\n  Object.keys(opts).forEach(function (key) {\n    if (!key.includes('minimum') && key.startsWith('min')) {\n      opts[key.replace('min', 'minimum')] = opts[key];\n      delete opts[key];\n    }\n    if (!key.includes('maximum') && key.startsWith('max')) {\n      opts[key.replace('max', 'maximum')] = opts[key];\n      delete opts[key];\n    }\n  });\n  Object.keys(opts).forEach(function (key) {\n    if (key.startsWith('minimum') && !key.endsWith('Digits')) {\n      opts[key + 'Digits'] = opts[key];\n      delete opts[key];\n    }\n    if (key.startsWith('maximum') && !key.endsWith('Digits')) {\n      opts[key + 'Digits'] = opts[key];\n      delete opts[key];\n    }\n  });\n  return opts;\n}\nmodule.exports = formatNum;","map":{"version":3,"names":["parseNum","require","defaultOptions","nanZero","locale","localeMatcher","useGrouping","maximumFractionDigits","formatNum","number","opts","renameKeyShortcuts","Object","assign","isNaN","nf","Intl","NumberFormat","style","format","keys","forEach","key","includes","startsWith","replace","endsWith","module","exports"],"sources":["C:/Users/Vince/Documents/Software Engineering/sunsetIn/sunsetFull/sunset/node_modules/format-num/index.js"],"sourcesContent":["const parseNum = require('parse-num')\n\n/* global Intl */\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\nconst defaultOptions = {\n  nanZero: true,\n  locale: 'en-US',\n  localeMatcher: 'best fit',\n  useGrouping: true, // grouping separator determined by locale\n  maximumFractionDigits: 15\n  // OTHER\n  // minimumIntegerDigits\n  // minimumFractionDigits\n  // maximumFractionDigits\n  // minimumSignificantDigits\n  // maximumSignificantDigits\n}\n\nfunction formatNum (number, opts) {\n  opts = renameKeyShortcuts(Object.assign({}, defaultOptions, opts))\n  number = parseNum(number)\n\n  if (isNaN(number)) {\n    if (opts.nanZero === false) return 'NaN'\n    else number = 0\n  }\n\n  const nf = new Intl.NumberFormat([opts.locale], Object.assign({}, opts, { style: 'decimal' }))\n  return nf.format(number)\n}\n\nfunction renameKeyShortcuts (opts) {\n  // expand 'min' to 'minimum', 'max' to 'maximum'\n  Object.keys(opts).forEach(function (key) {\n    if (!key.includes('minimum') && key.startsWith('min')) {\n      opts[key.replace('min', 'minimum')] = opts[key]\n      delete opts[key]\n    }\n\n    if (!key.includes('maximum') && key.startsWith('max')) {\n      opts[key.replace('max', 'maximum')] = opts[key]\n      delete opts[key]\n    }\n  })\n\n  Object.keys(opts).forEach(function (key) {\n    if (key.startsWith('minimum') && !key.endsWith('Digits')) {\n      opts[key + 'Digits'] = opts[key]\n      delete opts[key]\n    }\n\n    if (key.startsWith('maximum') && !key.endsWith('Digits')) {\n      opts[key + 'Digits'] = opts[key]\n      delete opts[key]\n    }\n  })\n\n  return opts\n}\n\nmodule.exports = formatNum\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAErC;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,OAAO;EACfC,aAAa,EAAE,UAAU;EACzBC,WAAW,EAAE,IAAI;EAAE;EACnBC,qBAAqB,EAAE;EACvB;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,SAASC,SAASA,CAAEC,MAAM,EAAEC,IAAI,EAAE;EAChCA,IAAI,GAAGC,kBAAkB,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,cAAc,EAAEQ,IAAI,CAAC,CAAC;EAClED,MAAM,GAAGT,QAAQ,CAACS,MAAM,CAAC;EAEzB,IAAIK,KAAK,CAACL,MAAM,CAAC,EAAE;IACjB,IAAIC,IAAI,CAACP,OAAO,KAAK,KAAK,EAAE,OAAO,KAAK,MACnCM,MAAM,GAAG,CAAC;EACjB;EAEA,MAAMM,EAAE,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,CAACP,IAAI,CAACN,MAAM,CAAC,EAAEQ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,IAAI,EAAE;IAAEQ,KAAK,EAAE;EAAU,CAAC,CAAC,CAAC;EAC9F,OAAOH,EAAE,CAACI,MAAM,CAACV,MAAM,CAAC;AAC1B;AAEA,SAASE,kBAAkBA,CAAED,IAAI,EAAE;EACjC;EACAE,MAAM,CAACQ,IAAI,CAACV,IAAI,CAAC,CAACW,OAAO,CAAC,UAAUC,GAAG,EAAE;IACvC,IAAI,CAACA,GAAG,CAACC,QAAQ,CAAC,SAAS,CAAC,IAAID,GAAG,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;MACrDd,IAAI,CAACY,GAAG,CAACG,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,GAAGf,IAAI,CAACY,GAAG,CAAC;MAC/C,OAAOZ,IAAI,CAACY,GAAG,CAAC;IAClB;IAEA,IAAI,CAACA,GAAG,CAACC,QAAQ,CAAC,SAAS,CAAC,IAAID,GAAG,CAACE,UAAU,CAAC,KAAK,CAAC,EAAE;MACrDd,IAAI,CAACY,GAAG,CAACG,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,GAAGf,IAAI,CAACY,GAAG,CAAC;MAC/C,OAAOZ,IAAI,CAACY,GAAG,CAAC;IAClB;EACF,CAAC,CAAC;EAEFV,MAAM,CAACQ,IAAI,CAACV,IAAI,CAAC,CAACW,OAAO,CAAC,UAAUC,GAAG,EAAE;IACvC,IAAIA,GAAG,CAACE,UAAU,CAAC,SAAS,CAAC,IAAI,CAACF,GAAG,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACxDhB,IAAI,CAACY,GAAG,GAAG,QAAQ,CAAC,GAAGZ,IAAI,CAACY,GAAG,CAAC;MAChC,OAAOZ,IAAI,CAACY,GAAG,CAAC;IAClB;IAEA,IAAIA,GAAG,CAACE,UAAU,CAAC,SAAS,CAAC,IAAI,CAACF,GAAG,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACxDhB,IAAI,CAACY,GAAG,GAAG,QAAQ,CAAC,GAAGZ,IAAI,CAACY,GAAG,CAAC;MAChC,OAAOZ,IAAI,CAACY,GAAG,CAAC;IAClB;EACF,CAAC,CAAC;EAEF,OAAOZ,IAAI;AACb;AAEAiB,MAAM,CAACC,OAAO,GAAGpB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}